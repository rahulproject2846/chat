{"version":3,"sources":["store/types/authType.js","audio/login.mp3","components/Login.jsx","store/actions/authAction.js","components/Register.jsx","components/Friends.jsx","components/FriendInfo.jsx","components/Message.jsx","components/MessageSend.jsx","components/RightSide.jsx","store/types/messengerType.js","store/actions/messengerAction.js","audio/notification.mp3","audio/sending.mp3","audio/logout.mp3","components/ActiveFriend.jsx","components/ForCall.jsx","components/Messenger.jsx","components/ProtectRoute.jsx","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/messengerReducer.js","store/index.js","index.js"],"names":["REGISTER_FAIL","REGISTER_SUCCESS","SUCCESS_MESSAGE_CLEAR","ERROR_CLEAR","USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","Login","_ref","history","_useSound","useSound","loginSound","loginSPlay","_slicedToArray","alert","useAlert","_useSelector","useSelector","state","auth","successMessage","loading","error","authenticate","dispatch","myInfo","useDispatch","_useState","useState","email","password","_useState2","setState","inputHendle","e","_objectSpread","_defineProperty","target","name","value","useEffect","push","success","type","map","err","_jsx","className","children","_jsxs","onSubmit","data","preventDefault","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","dispath","config","response","wrap","_context2","prev","next","headers","axios","post","sent","localStorage","setItem","token","payload","t0","errorMessage","stop","_x2","apply","arguments","htmlFor","onChange","placeholder","id","Link","to","Register","userName","confirmPassword","image","setstate","_useState3","_useState4","loadImage","setLoadImage","formData","FormData","append","_callee","_context","_x","alt","src","files","length","reader","FileReader","onload","result","readAsDataURL","Friends","props","_props$friend","friend","fndInfo","msgInfo","myId","activeUser","some","u","userId","_id","senderId","undefined","status","message","text","slice","moment","createdAt","startOf","fromNow","RiCheckboxCircleFill","HiOutlineCheckCircle","FriendInfo","currentfriend","BsChevronDown","BiSearch","getFriendClass","document","getElementsByClassName","frienNameClass","i","innerText","toLowerCase","indexOf","style","display","getFriendClassw","frienNameClassw","m","index","Message","scrollRef","typingMessage","_Fragment","ref","msg","class","MessageSend","newMessage","sendMessage","emojiSend","ImageSend","BsPlusCircle","RiGalleryLine","onClick","IoSend","AiFillLike","RightSide","IoMdArrowRoundBack","IoCall","BsCameraVideoFill","FRIENDS_GET_SUCCESS","MESSAGE_GET_SUCCESS","MESSAGE_SEND_SUCCESS","seenMessage","_ref5","_callee5","_context5","console","log","_x5","themeSet","theme","_ref8","_callee8","_context8","_x8","ActiveFriend","user","setCurrentFriend","userInfo","ForCall","FiPhoneIncoming","SiGooglemessages","FiPhoneOutgoing","FiPhoneMissed","Messenger","notificationSound","notificationSPlay","_useSound3","sendingSound","sendingSPlay","_useSound5","logoutSound","logoutSPlay","_useSelector2","messenger","friends","messageSendSuccess","message_get_success","themeMood","new_user_add","setNewMessage","_useState5","_useState6","socketMessage","setSocketMessage","_useState7","_useState8","setTypingMessage","_useState9","_useState10","setActiveUser","useRef","socket","current","io","on","emit","users","filterUser","filter","reseverId","toast","concat","senderName","_ref6","_callee6","_context6","_x6","get","_ref3","_callee3","_context3","_x3","_scrollRef$current","scrollIntoView","behavior","_useState11","_useState12","hide","setHide","_ref7","_callee7","_context7","getItem","_x7","Toaster","position","reverseOrder","toastOptions","fontSize","defaultChecked","CgColorBucket","removeItem","IoLogOutOutline","fd","BsFillChatFill","BsFillCameraVideoFill","BsFillPeopleFill","_ref4","_callee4","_context4","_x4","messageSend","emu","ProtectRoute","Route","path","component","exact","Redirect","App","Router","Switch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","authState","tokenDecode","tokenDecoded","deCodeToken","expTime","Date","exp","getToken","getInfo","messengerState","rootReducer","combineReducers","action","_toConsumableArray","findIndex","f","middleware","thunkMiddleware","store","createStore","compose","applyMiddleware","options","timeout","positions","BOTTOM_CENTER","transitions","SCALE","ReactDOM","render","Provider","AlertProvider","template","alertTemplate","getElementById"],"mappings":"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","file":"static/js/main.5f125d1b.chunk.js","sourcesContent":["export const REGISTER_FAIL ='REGISTER_FAIL'\r\nexport const REGISTER_SUCCESS ='REGISTER_SUCCESS'\r\nexport const SUCCESS_MESSAGE_CLEAR = 'SUCCESS_MESSAGE_CLEAR'\r\nexport const ERROR_CLEAR = 'ERROR_CLEAR'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS' \r\n","export default __webpack_public_path__ + \"static/media/login.3ddd5f8e.mp3\";","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { userLogin } from \"../store/actions/authAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { SUCCESS_MESSAGE_CLEAR, ERROR_CLEAR } from \"../store/types/authType\";\r\nimport useSound from 'use-sound';\r\nimport loginSound from '../audio/login.mp3';\r\n\r\n\r\nconst Login = ({ history }) => {\r\n\r\n\r\n    const [loginSPlay] = useSound(loginSound);\r\n    const alert = useAlert();\r\n    const { loading, successMessage, error, authenticate, myInfo } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const inputHendle = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const login = (e) => {\r\n\r\n        e.preventDefault();\r\n        dispatch(userLogin(state));\r\n        loginSPlay();\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (authenticate) {\r\n            history.push('/')\r\n        }\r\n        if (successMessage) {\r\n            alert.success(successMessage);\r\n            dispatch({ type: SUCCESS_MESSAGE_CLEAR })\r\n        }\r\n        if (error) {\r\n            error.map(err => alert.error(err));\r\n            dispatch({ type: ERROR_CLEAR })\r\n        }\r\n    }, [successMessage, error])\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h3>Login</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={login}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input onChange={inputHendle} value={state.email} type=\"email\" placeholder=\"email\" name=\"email\" id=\"email\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input onChange={inputHendle} value={state.password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" value=\"Login\" className=\"btn\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <span><Link to=\"/MESSENGER/Register\">Register Your Account</Link></span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Login","import axios from 'axios'\r\n//import { config } from 'dotenv';\r\nimport { REGISTER_FAIL,REGISTER_SUCCESS, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL} from \"../types/authType\";\r\nexport const userRegister = (data) => {\r\n    return async (dispatch) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/josn'\r\n            }\r\n        } \r\n        try {\r\n            const response = await axios.post('/api/messenger/user-register', data, config);\r\n            \r\n            localStorage.setItem('authToken', response.data.token);\r\n\r\n            dispatch({\r\n                type : REGISTER_SUCCESS,\r\n                payload : {\r\n                    successMessage : response.data.successMessage,\r\n                    token : response.data.token\r\n                }\r\n            })\r\n\r\n        } catch (error){\r\n            dispatch({\r\n                type : REGISTER_FAIL,\r\n                payload : {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const userLogin = (data) => {\r\n    return async (dispath) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/api/messenger/user-login', data, config);\r\n            localStorage.setItem('authToken', response.data.token);\r\n            dispath({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    successMessage: response.data.successMessage,\r\n                    token: response.data.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispath({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const userLogout = ()=>async(dispatch)=>{\r\n    try {\r\n        const response = await axios.post('/api/messenger/user-logout');\r\n        if(response.data.success){\r\n            localStorage.removeItem('authToken');\r\n            dispatch({\r\n                type : 'LOGOUT_SUCCESS',\r\n            })\r\n        }\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React,{useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userRegister } from \"../store/actions/authAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { SUCCESS_MESSAGE_CLEAR,ERROR_CLEAR } from \"../store/types/authType\";\r\n\r\nconst Register = ({history}) => {\r\n\r\nconst alert = useAlert();\r\n    const { loading,successMessage,error,authenticate,myInfo} = useSelector(state=>state.auth);\r\n\r\n    //console.log(myInfo)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state,setstate] = useState({\r\n        userName : '',\r\n        email : '',\r\n        password : '',\r\n        confirmPassword : '',\r\n        image : ''\r\n    });\r\n\r\n    const[loadImage,setLoadImage] = useState('');\r\n\r\n    const inputHendle = (e) =>{\r\n        setstate({\r\n            ...state,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const fileHendle = e =>{\r\n        if(e.target.files.length !==0){\r\n            setstate({\r\n                ...state,\r\n                [e.target.name] : e.target.files[0]\r\n            })\r\n        }\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () =>{\r\n            setLoadImage(reader.result)\r\n        }\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    const register = e =>{\r\n        const {userName,email,password,image,confirmPassword} = state;\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n\r\n        formData.append('userName',userName);\r\n        formData.append('email',email);\r\n        formData.append('password',password);\r\n        formData.append('confirmPassword',confirmPassword);\r\n        formData.append('image',image);\r\n\r\n        dispatch(userRegister(formData));\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(authenticate){\r\n            history.push('/')\r\n        }\r\n        if(successMessage){\r\n            alert.success(successMessage);\r\n           dispatch({type : SUCCESS_MESSAGE_CLEAR})\r\n        }\r\n        if(error){\r\n            error.map(err=>alert.error(err));\r\n            dispatch({type : ERROR_CLEAR})\r\n        }\r\n    },[successMessage,error])\r\n\r\n    \r\n      \r\n    return(\r\n        <div className='register'>\r\n            <div className='card'>\r\n                <div className='card-header'>\r\n                    <h3>Register</h3>\r\n                </div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={register}>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"username\">User Name</label>\r\n                            <input type=\"text\" onChange={inputHendle}\r\n                            name=\"userName\" value={state.userName} className='form-control'\r\n                            placeholder='user name' id='username' />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" onChange={inputHendle}\r\n                            name=\"email\" value={state.email} className='form-control'\r\n                            placeholder='email' id='email' />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" onChange={inputHendle}\r\n                            name=\"password\" value={state.password} className='form-control'\r\n                            placeholder='password' id='password' />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input type=\"Password\" onChange={inputHendle}\r\n                            name=\"confirmPassword\" value={state.confirmPassword} className='form-control'\r\n                            placeholder='confirm password' id='confirmPassword' />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"file-image\">\r\n                                <div className=\"image\">\r\n                                    {loadImage ? <img alt=\"Blank\" src={loadImage} /> : \"\" }\r\n                                </div>\r\n                                <div className=\"file\">\r\n                                    <label htmlFor=\"image\">Select Image</label>\r\n                                    <input type=\"file\" onChange={fileHendle} \r\n                                    name=\"image\" className=\"form-control\" id=\"image\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" value='register' className=\"btn\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <span><Link to=\"/messenger/login\">Login Your Account</Link></span>\r\n                            \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React from 'react';\r\nimport moment from 'moment';\r\nimport { HiOutlineCheckCircle, RiCheckboxCircleFill } from \"react-icons/all\";\r\n\r\nconst Friends = (props) => {\r\n    const { fndInfo, msgInfo } = props.friend;\r\n    const myId = props.myId;\r\n    const { activeUser } = props;\r\n    return (\r\n        <div className='friend'>\r\n            <label htmlFor=\"friendCheckbox\">\r\n                <div className=\"friend-image\">\r\n                    <div className=\"image\">\r\n                        <img src={fndInfo.image} alt=\"\" />\r\n                        {\r\n                            activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === fndInfo._id) ? <div className=\"active_icon\"></div> : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"friend-name-seen\">\r\n                    <div className=\"friend-name\">\r\n                        <h4 className={msgInfo?.senderId !== myId && msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? 'unseen_message Fd_name' : 'Fd_name'} >{fndInfo.userName}</h4>\r\n                        <div className=\"msg-time\">\r\n                            {\r\n                                msgInfo && msgInfo.senderId === myId ? <span>You </span> : <span className={msgInfo?.senderId !== myId && msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? 'unseen_message' : ''}>{fndInfo.userName + ''} </span>\r\n\r\n                            }\r\n                            {\r\n                                msgInfo && msgInfo.message.text ? <span className={msgInfo?.senderId !== myId && msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? 'unseen_message' : ''}>{msgInfo.message.text.slice(0, 10)}. </span> : msgInfo && msgInfo.message.image ? <span> send a image. </span> : <span> Registered </span>\r\n                            }\r\n                            <span>{msgInfo ? moment(msgInfo.createdAt).startOf('mini').fromNow() : moment(fndInfo.createdAt).startOf('mini').fromNow()}</span>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n\r\n                        myId === msgInfo?.senderId ?\r\n                            <div className=\"seen-unseen-icon\">\r\n\r\n                                {\r\n                                    msgInfo.status === 'seen' ?\r\n                                        <img src={fndInfo.image} alt=\"\" /> : msgInfo.status === 'delivared' ? <div className=\"delivared\"><RiCheckboxCircleFill /></div> : <div className='unseen'><HiOutlineCheckCircle /></div>\r\n                                }\r\n                            </div> :\r\n                            <div className=\"seen-unseen-icon\">\r\n                                {\r\n                                    msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? <div className=\"seen-icon\"></div> : ''\r\n                                }\r\n\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from 'react'\r\nimport { BsChevronDown, BiSearch } from 'react-icons/all'\r\nimport moment from 'moment';\r\n\r\nconst FriendInfo = ({ currentfriend, activeUser, message }) => {\r\n\r\n    const search = (e) => {\r\n        const getFriendClass = document.getElementsByClassName('my-message');\r\n        const frienNameClass = document.getElementsByClassName('my-text');\r\n        for (var i = 0; i < getFriendClass.length, i < frienNameClass.length; i++) {\r\n            let text = frienNameClass[i].innerText.toLowerCase();\r\n            if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n                getFriendClass[i].style.display = '';\r\n            } else {\r\n                getFriendClass[i].style.display = 'none';\r\n            }\r\n        }\r\n        const getFriendClassw = document.getElementsByClassName('fd-message');\r\n        const frienNameClassw = document.getElementsByClassName('fd-text');\r\n        for (i = 0; i < getFriendClassw.length, i < frienNameClassw.length; i++) {\r\n            let text = frienNameClassw[i].innerText.toLowerCase();\r\n            if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n                getFriendClassw[i].style.display = '';\r\n            } else {\r\n                getFriendClassw[i].style.display = 'none';\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='friend-info'>\r\n            <input type=\"checkbox\" id='gallery' />\r\n            <div className=\"image-name\">\r\n                <div className=\"image\">\r\n                    <img src={currentfriend.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"name\">\r\n                    <h4>{currentfriend.userName}</h4>\r\n                </div>\r\n                {\r\n                    activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === currentfriend._id) ? <div className=\"active-user\"> Active </div> : <div className=\"active-user\"> Offline </div>\r\n                }\r\n            </div>\r\n            <div className=\"others\">\r\n                <input type=\"checkbox\" id='searchMessage' />\r\n                <input type=\"checkbox\" id='fDetils' />\r\n\r\n\r\n                <div className=\"custom-chat\">\r\n                    <label htmlFor=\"fDetils\"><h3>Friend Detils </h3></label>\r\n                    <label className='arrowDown' htmlFor=\"fDetils\"><BsChevronDown /></label>\r\n                </div>\r\n\r\n                <div className=\"dropDownFndInfo\">\r\n\r\n                    <div className=\"fDetils\">\r\n                        <div className=\"fndDetils\">\r\n                            User Name : {currentfriend.userName}\r\n                        </div> <br />\r\n                        <div className=\"fndDetils\">\r\n                            Email : {currentfriend.email}\r\n                        </div> <br />\r\n                        <div className=\"fndDetils\">\r\n                            Registered : {moment(currentfriend.createdAt).startOf('mini').fromNow()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"privacy\">\r\n                    <label htmlFor=\"searchMessage\"><h3>Search Message </h3></label>\r\n                    <label className='arrowDown' htmlFor=\"searchMessage\"><BsChevronDown /></label>\r\n                </div>\r\n                <div className=\"searchMessage\">\r\n                    <div className=\"search\">\r\n                        <button><BiSearch /></button>\r\n                        <input onChange={search} type=\"text\" placeholder='search' className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"media\">\r\n                    <label htmlFor=\"gallery\"><h3>Shared Media </h3></label>\r\n                    <label className='arrowDown' htmlFor=\"gallery\"><BsChevronDown /></label>\r\n                </div>\r\n            </div>\r\n            <div className=\"conversationImage\">\r\n                <div className=\"gallery\">\r\n                    {\r\n                        message && message.length > 0 ? message.map((m, index) => m.message.image && <img key={index} src={m.message.image} alt='' />) : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendInfo","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport { HiOutlineCheckCircle, RiCheckboxCircleFill } from \"react-icons/all\";\r\n\r\nconst Message = ({ message, currentfriend, scrollRef, typingMessage }) => {\r\n\r\n    const { myInfo } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <>\r\n            <div className='message-show'>\r\n                {\r\n                    message && message.length > 0 ? message.map((m, index) =>\r\n                        m.senderId === myInfo.id ? <div key={index} ref={scrollRef} className=\"my-message\">\r\n                            <div className=\"image-message\">\r\n                                <div className=\"my-text\">\r\n                                    <p className='message-text my'>{m.message.text === '' ? <img src={m.message.image} alt='image' /> : m.message.text}</p>\r\n                                    {\r\n                                        index === message.length - 1 && m.senderId === myInfo.id ?\r\n                                            m.status === 'seen' ? <img className='img' src={currentfriend.image} alt=\"\" /> : m.status === 'delivared' ? <span><RiCheckboxCircleFill /></span> : <span><HiOutlineCheckCircle /></span> : ''\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"time\">\r\n                                {moment(m.createdAt).startOf('mini').fromNow()}\r\n                            </div>\r\n                        </div> : <div key={index} ref={scrollRef} className=\"fd-message\">\r\n                            <div className=\"image-message-time\">\r\n                                <img src={currentfriend.image} alt=\"\" />\r\n                                <div className=\"message-time\">\r\n                                    <div className=\"fd-text\">\r\n                                        <p className='message-text fd'>{m.message.text === '' ? <img src={m.message.image} alt='image' /> : m.message.text}</p>\r\n                                    </div>\r\n                                    <div className=\"time\">\r\n                                        {moment(m.createdAt).startOf('mini').fromNow()}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : <div className='friend_connect'>\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                        <h3>{currentfriend.userName} Connected You</h3>\r\n                        <span>{moment(currentfriend.createdAt).startOf('mini').fromNow()}</span>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n            {\r\n                typingMessage && typingMessage.msg && typingMessage.senderId === currentfriend._id ? <div className=\"typing-message\">\r\n                    <div className=\"fd-message\">\r\n                        <div className=\"image-message-time\">\r\n                            <img src={currentfriend.image} alt=\"\" />\r\n                            <div className=\"message-time\">\r\n                                <div className=\"fd-text\">\r\n                                    <p className='message-text'><div id=\"wave\">\r\n                                        <span class=\"srfriendzone\"> {currentfriend.userName} is typing </span>\r\n                                        <span class=\"dot one\"></span>\r\n                                        <span class=\"dot two\"></span>\r\n                                        <span class=\"dot three\"></span>\r\n                                    </div></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : ''\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { BsPlusCircle, RiGalleryLine, AiFillLike, IoSend } from 'react-icons/all'\r\n\r\nconst MessageSend = ({ inputHendle, newMessage, sendMessage, emojiSend, ImageSend }) => {\r\n\r\n    const emojis = [\r\n        '😀', '😃', '😄', '😁',\r\n        '😆', '😅', '😂', '🤣',\r\n        '😊', '😇', '🙂', '🙃',\r\n        '😉', '😌', '😍', '😝',\r\n        '😜', '🧐', '🤓', '😎',\r\n        '😕', '🤑', '🥴', '😱',\r\n        '👋', '🎉', '📚', '❤️'\r\n    ]\r\n\r\n    return (\r\n        <div className='message-send-section'>\r\n            <input type=\"checkbox\" id='emoji' />\r\n            <div className=\"file hover-attachment\">\r\n                <div className=\"add-attachment\">\r\n                    Add Attachment\r\n                </div>\r\n                <input onChange={ImageSend} type=\"file\" id='pic' className=\"form-control\" />\r\n                <label htmlFor=\"pic\"><BsPlusCircle /></label>\r\n            </div>\r\n            <div className=\"file hover-image\">\r\n                <div className=\"add-image\">\r\n                    Add Image\r\n                </div>\r\n                <input onChange={ImageSend} type=\"file\" id='pic' className=\"form-control\" />\r\n                <label htmlFor=\"pic\"><RiGalleryLine /></label>\r\n            </div>\r\n            <div className=\"message-type\">\r\n                <input onChange={inputHendle} type=\"text\" name='message' id='message' placeholder='Aa' value={newMessage} className=\"form-control\" />\r\n                <label htmlFor=\"emoji\">🙂</label>\r\n            </div>\r\n            <div onClick={sendMessage} className=\"file sentOrLike\">\r\n                <label className='sentOrLikeO'>\r\n\r\n                    {\r\n                        newMessage ? <IoSend /> : <AiFillLike />\r\n                    }\r\n                </label>\r\n\r\n            </div>\r\n            <div className=\"emoji-section\">\r\n                <div className=\"emoji\">\r\n                    {\r\n                        emojis.map((e, index) => <span key={index} onClick={() => emojiSend(e)} >{e}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageSend","import React from 'react'\r\nimport { IoMdArrowRoundBack, BsCameraVideoFill, IoCall } from 'react-icons/all'\r\nimport FriendInfo from './FriendInfo'\r\nimport Message from './Message'\r\nimport MessageSend from './MessageSend'\r\n\r\nconst RightSide = (props) => {\r\n    const {\r\n        currentfriend,\r\n        inputHendle,\r\n        newMessage,\r\n        sendMessage,\r\n        message,\r\n        scrollRef,\r\n        emojiSend,\r\n        ImageSend,\r\n        activeUser,\r\n        typingMessage,\r\n    } = props;\r\n\r\n    return (\r\n        <div className='col-9'>\r\n            <div className=\"right-side\">\r\n                <input type=\"checkbox\" id='dot' />\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <div className=\"message-send-show\">\r\n                        <div className=\"header\">\r\n                                <label className=\"backBtn\" htmlFor=\"friendCheckbox\">\r\n                                    <div className=\"backIcon\">\r\n                                        <IoMdArrowRoundBack />\r\n                                    </div>\r\n                                    \r\n                                </label>\r\n                                <label htmlFor=\"dot\">\r\n                                    <div className=\"image-name\">\r\n                                        <div className=\"image\">\r\n                                            <img src={currentfriend.image} alt=\"\" />\r\n                                            {\r\n                                                activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === currentfriend._id) ?\r\n                                                    <div className=\"active-icon\"></div> : ''\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"name\">\r\n                                            <h3> {currentfriend.userName} </h3>\r\n                                            <span>{\r\n                                                activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === currentfriend._id) ? 'Active now' : 'Offline'}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </label>\r\n                                <div className=\"icons\">\r\n                                    <div className=\"icon hide\">\r\n                                        <IoCall />\r\n                                    </div>\r\n                                    <div className=\"icon hide\">\r\n                                        <BsCameraVideoFill />\r\n                                    </div>\r\n                                    <div className=\"icon\">\r\n                                        <label htmlFor=\"dot\">\r\n                                            <div className=\"hamburger\">\r\n                                                <div className=\"menu\">\r\n                                                    <div className=\"bar1\"></div>\r\n                                                    <div className=\"bar2\"></div>\r\n                                                    <div className=\"bar3\"></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Message\r\n                                currentfriend={currentfriend}\r\n                                scrollRef={scrollRef}\r\n                                message={message}\r\n                                typingMessage={typingMessage}\r\n                            />\r\n                            <MessageSend\r\n                                ImageSend={ImageSend}\r\n                                emojiSend={emojiSend}\r\n                                sendMessage={sendMessage}\r\n                                inputHendle={inputHendle}\r\n                                newMessage={newMessage}\r\n                                typingMessage={typingMessage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <FriendInfo message={message} currentfriend={currentfriend} activeUser={activeUser} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightSide","export const FRIENDS_GET_SUCCESS = 'FRIENDS_GET_SUCCESS';\r\nexport const MESSAGE_GET_SUCCESS = 'MESSAGE_GET_SUCCESS';\r\nexport const MESSAGE_SEND_SUCCESS = 'MESSAGE_SEND_SUCCESS';\r\nexport const UPDATE_FRIEND_MESSAGE = 'UPDATE_FRIEND_MESSAGE';\r\nexport const MESSAGE_SEND_SUCCESS_CLEAR = 'MESSAGE_SEND_SUCCESS_CLEAR';\r\nexport const SEEN_MESSAGE = 'SEEN_MESSAGE';\r\nexport const DELIVARED_MESSAGE = 'DELIVARED_MESSAGE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const MESSAGE_GET_SUCCESS_CLEAR = 'MESSAGE_GET_SUCCESS_CLEAR';\r\n\r\n","import axios from 'axios';\r\nimport { FRIENDS_GET_SUCCESS, MESSAGE_GET_SUCCESS, MESSAGE_SEND_SUCCESS } from \"../types/messengerType\";\r\nexport const getFriends = () => async (dispatch) => {\r\n\r\n    try {\r\n        const response = await axios.get('/api/messenger/get-friends');\r\n        dispatch({\r\n            type: FRIENDS_GET_SUCCESS,\r\n            payload: {\r\n                friends: response.data.friends\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const messageSend = (data) => async (dispatch) => {\r\n\r\n    try {\r\n        const response = await axios.post('/api/messenger/send-message', data);\r\n        dispatch({\r\n            type: MESSAGE_SEND_SUCCESS,\r\n            payload: {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const getMessage = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const response = await axios.get(`/api/messenger/get-message/${id}`)\r\n            dispatch({\r\n                type: MESSAGE_GET_SUCCESS,\r\n                payload: {\r\n                    message: response.data.message\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data);\r\n        }\r\n    }\r\n}\r\n\r\nexport const ImageMessageSend = (data) => async (dispatch) => {\r\n\r\n    try {\r\n        const response = await axios.post('/api/messenger/image-message-send', data);\r\n        dispatch({\r\n            type: MESSAGE_SEND_SUCCESS,\r\n            payload: {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n    }\r\n\r\n}\r\n\r\nexport const seenMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post('/api/messenger/seen-message', msg);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n    }\r\n}\r\nexport const updateMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post('/api/messenger/delivared-message', msg);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n    }\r\n}\r\n\r\nexport const getTheme = () => async (dispatch) => {\r\n\r\n    const theme = localStorage.getItem('theme');\r\n    dispatch({\r\n        type: \"THEME_GET_SUCCESS\",\r\n        payload: {\r\n            theme: theme ? theme : 'white'\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const themeSet = (theme) => async (dispatch) => {\r\n\r\n    localStorage.setItem('theme', theme);\r\n    dispatch({\r\n        type: \"THEME_SET_SUCCESS\",\r\n        payload: {\r\n            theme: theme\r\n        }\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/notification.a9597953.mp3\";","export default __webpack_public_path__ + \"static/media/sending.aca82518.mp3\";","export default __webpack_public_path__ + \"static/media/logout.52f04a7e.mp3\";","import React from 'react'\r\n\r\nconst ActiveFriend = ({ user, setCurrentFriend }) => {\r\n    return (\r\n        <div>\r\n            <div onClick={() => setCurrentFriend({\r\n                _id: user.userInfo.id,\r\n                email: user.userInfo.email,\r\n                image: user.userInfo.image,\r\n                userName: user.userInfo.userName\r\n            })} className=\"active-friend\">\r\n                <label htmlFor=\"friendCheckbox\">\r\n                    <div className=\"image-active-icon\">\r\n\r\n                        <div className=\"image\">\r\n                            <img src={user.userInfo.image} alt=\"\" />\r\n                            <div className=\"active-icon\"></div>\r\n                        </div>\r\n\r\n                    </div><p>{user.userInfo.userName}</p></label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveFriend","import React from 'react'\r\nimport moment from 'moment';\r\nimport { FiPhoneIncoming, FiPhoneOutgoing, FiPhoneMissed, SiGooglemessages } from \"react-icons/all\";\r\nconst ForCall = ({ currentfriend }) => {\r\n    return (\r\n        <div className=\"call-friend\">\r\n            <span className='recents'> Recents </span>\r\n            <label htmlFor=\"/\"> {/* friendCheckbox */}\r\n                <div className=\"image-call-icon\">\r\n                    <div className=\"image\">\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"call-detils-conversation\">\r\n                    <div className=\"call-detils\">\r\n                        <h4>{currentfriend.userName}</h4>\r\n                        <div className=\"call-time\">\r\n                            <span> <FiPhoneIncoming /> Incoming. </span>\r\n                            <span> {moment(currentfriend.createdAt).startOf('mini').fromNow()} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conversation\"><SiGooglemessages /></div>\r\n                </div>\r\n            </label>\r\n            <label htmlFor=\"/\"> {/* friendCheckbox */}\r\n                <div className=\"image-call-icon\">\r\n                    <div className=\"image\">\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"call-detils-conversation\">\r\n                    <div className=\"call-detils\">\r\n                        <h4>{currentfriend.userName}</h4>\r\n                        <div className=\"call-time\">\r\n                            <span> <FiPhoneOutgoing /> Outgoing. </span>\r\n                            <span> {moment(currentfriend.createdAt).startOf('mini').fromNow()} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conversation\"><SiGooglemessages /></div>\r\n                </div>\r\n            </label>\r\n            <label htmlFor=\"/\"> {/* friendCheckbox */}\r\n                <div className=\"image-call-icon\">\r\n                    <div className=\"image\">\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"call-detils-conversation\">\r\n                    <div className=\"call-detils\">\r\n                        <h4>{currentfriend.userName}</h4>\r\n                        <div className=\"call-time\">\r\n                            <span className='missed'> <FiPhoneMissed /> Missed. </span>\r\n                            <span> {moment(currentfriend.createdAt).startOf('mini').fromNow()} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conversation\"><SiGooglemessages /></div>\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForCall","import React, { useEffect, useState, useRef } from 'react'\r\nimport { BiSearch, IoLogOutOutline, CgColorBucket, BsFillPeopleFill, BsFillChatFill, BsFillCameraVideoFill } from \"react-icons/all\";\r\nimport Friends from './Friends';\r\nimport RightSide from './RightSide';\r\nimport { io } from \"socket.io-client\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFriends, messageSend, getMessage, ImageMessageSend, seenMessage, updateMessage, getTheme, themeSet } from \"../store/actions/messengerAction\";\r\nimport { userLogout } from \"../store/actions/authAction\";\r\nimport useSound from 'use-sound';\r\nimport notificationSound from '../audio/notification.mp3';\r\nimport sendingSound from '../audio/sending.mp3';\r\nimport logoutSound from '../audio/logout.mp3';\r\nimport ActiveFriend from './ActiveFriend';\r\nimport ForCall from './ForCall';\r\n\r\nconst Messenger = () => {\r\n    const [notificationSPlay] = useSound(notificationSound);\r\n    const [sendingSPlay] = useSound(sendingSound);\r\n    const [logoutSPlay] = useSound(logoutSound);\r\n    const { myInfo } = useSelector(state => state.auth);\r\n    const { friends, message, messageSendSuccess, message_get_success, themeMood, new_user_add } = useSelector(state => state.messenger);\r\n    const [currentfriend, setCurrentFriend] = useState('');\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [socketMessage, setSocketMessage] = useState('');\r\n    const [typingMessage, setTypingMessage] = useState('')\r\n    const [activeUser, setActiveUser] = useState([]);\r\n    const scrollRef = useRef();\r\n    const socket = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io('/');\r\n        socket.current.on('getMessage', (data) => {\r\n            setSocketMessage(data);\r\n        })\r\n        socket.current.on('typingMessageGet', (data) => {\r\n            setTypingMessage(data);\r\n        })\r\n        socket.current.on('msgSeenResponse', msg => {\r\n            dispatch({\r\n                type: 'SEEN_MESSAGE',\r\n                payload: {\r\n                    msgInfo: msg\r\n                }\r\n            })\r\n        })\r\n        socket.current.on('msgDelivaredResponse', msg => {\r\n            dispatch({\r\n                type: 'DELIVARED_MESSAGE',\r\n                payload: {\r\n                    msgInfo: msg\r\n                }\r\n            })\r\n        })\r\n        socket.current.on('seenSuccess', data => {\r\n            dispatch({\r\n                type: 'SEEN_ALL',\r\n                payload: data\r\n            })\r\n        })\r\n    }, []);\r\n    useEffect(() => {\r\n        socket.current.emit('addUser', myInfo.id, myInfo)\r\n    }, []);\r\n    useEffect(() => {\r\n        socket.current.on('getUser', (users) => {\r\n            const filterUser = users.filter(u => u.userId !== myInfo.id);\r\n            setActiveUser(filterUser);\r\n        });\r\n        socket.current.on('new_user_add', data => {\r\n            dispatch({\r\n                type: 'NEW_USER_ADD',\r\n                payload: {\r\n                    new_user_add: data\r\n                }\r\n            })\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        if (socketMessage && currentfriend) {\r\n            if (socketMessage.senderId === currentfriend._id && socketMessage.reseverId === myInfo.id) {\r\n                dispatch({\r\n                    type: 'SOCKET_MESSAGE',\r\n                    payload: {\r\n                        message: socketMessage\r\n                    }\r\n                })\r\n                dispatch(seenMessage(socketMessage));\r\n                socket.current.emit('messageSeen', socketMessage);\r\n                dispatch({\r\n                    type: 'UPDATE_FRIEND_MESSAGE',\r\n                    payload: {\r\n                        msgInfo: socketMessage,\r\n                        status: 'seen'\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setSocketMessage('')\r\n    }, [socketMessage])\r\n    useEffect(() => {\r\n        if (socketMessage && socketMessage.senderId !== currentfriend._id && socketMessage.reseverId === myInfo.id) {\r\n            notificationSPlay();\r\n            toast.success(`${socketMessage.senderName} send a new message`)\r\n            dispatch(updateMessage(socketMessage));\r\n            socket.current.emit('delivaredMessage', socketMessage);\r\n            dispatch({\r\n                type: 'UPDATE_FRIEND_MESSAGE',\r\n                payload: {\r\n                    msgInfo: socketMessage,\r\n                    status: 'delivared'\r\n                }\r\n            })\r\n        }\r\n    }, [socketMessage])\r\n    const inputHendle = (e) => {\r\n        setNewMessage(e.target.value);\r\n        socket.current.emit('typingMessage', {\r\n            senderId: myInfo.id,\r\n            reseverId: currentfriend._id,\r\n            msg: e.target.value\r\n        })\r\n    }\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        sendingSPlay();\r\n        const data = {\r\n            senderName: myInfo.userName,\r\n            reseverId: currentfriend._id,\r\n            message: newMessage ? newMessage : '👍'\r\n        }\r\n        socket.current.emit('typingMessage', {\r\n            senderId: myInfo.id,\r\n            reseverId: currentfriend._id,\r\n            msg: ''\r\n        })\r\n        dispatch(messageSend(data));\r\n        setNewMessage('')\r\n    }\r\n    const emojiSend = (emu) => {\r\n        setNewMessage(`${newMessage}` + emu);\r\n        socket.current.emit('typingMessage', {\r\n            senderId: myInfo.id,\r\n            reseverId: currentfriend._id,\r\n            msg: emu\r\n        })\r\n    }\r\n    const ImageSend = (e) => {\r\n        if (e.target.files.length !== 0) {\r\n            sendingSPlay();\r\n            const formData = new FormData();\r\n            formData.append('senderName', myInfo.userName);\r\n            formData.append('reseverId', currentfriend._id);\r\n            formData.append('image', e.target.files[0]);\r\n            dispatch(ImageMessageSend(formData));\r\n        }\r\n    }\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (messageSendSuccess) {\r\n            socket.current.emit('sendMessage', message[message.length - 1]);\r\n            dispatch({\r\n                type: 'UPDATE_FRIEND_MESSAGE',\r\n                payload: {\r\n                    msgInfo: message[message.length - 1]\r\n                }\r\n            })\r\n            dispatch({ type: 'MESSAGE_SEND_SUCCESS_CLEAR' })\r\n        }\r\n    }, [messageSendSuccess])\r\n    useEffect(() => {\r\n        dispatch(getFriends());\r\n        dispatch({ type: 'NEW_USER_ADD_CLEAR' })\r\n    }, [new_user_add]);\r\n\r\n    // useEffect(() => {\r\n    //     if (friends && friends.length > 0) {\r\n    //         setCurrentFriend(friends[0].fndInfo);\r\n    //     }\r\n    // }, [friends])\r\n\r\n    useEffect(() => {\r\n        dispatch(getMessage(currentfriend._id));\r\n    }, [currentfriend?._id])\r\n    useEffect(() => {\r\n        if (message.length > 0) {\r\n            if (message[message.length - 1].senderId !== myInfo.id && message[message.length - 1].status !== 'seen') {\r\n                dispatch({\r\n                    type: 'UPDATE',\r\n                    payload: {\r\n                        id: currentfriend._id\r\n                    }\r\n                })\r\n                socket.current.emit('seen', { senderId: currentfriend._id, reseverId: myInfo.id });\r\n                dispatch(seenMessage({ _id: message[message.length - 1]._id }))\r\n            }\r\n        }\r\n        dispatch({\r\n            type: 'MESSAGE_GET_SUCCESS_CLEAR'\r\n        })\r\n    }, [message_get_success])\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: 'smooth' })\r\n    }, [message]);\r\n    const [hide, setHide] = useState(true);\r\n    const logout = () => {\r\n        dispatch(userLogout());\r\n        socket.current.emit('logout', myInfo.id);\r\n        logoutSPlay();\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getTheme());\r\n    }, []);\r\n    const search = (e) => {\r\n        const getFriendClass = document.getElementsByClassName('hover-friend');\r\n        const frienNameClass = document.getElementsByClassName('Fd_name');\r\n        for (var i = 0; i < getFriendClass.length, i < frienNameClass.length; i++) {\r\n            let text = frienNameClass[i].innerText.toLowerCase();\r\n            if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n                getFriendClass[i].style.display = '';\r\n            } else {\r\n                getFriendClass[i].style.display = 'none';\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={themeMood === 'dark' ? 'messenger themeDark' : themeMood === 'black' ? 'messenger themeBlack' : 'messenger'}>\r\n            <Toaster\r\n                position={'top-right'}\r\n                reverseOrder={false}\r\n                toastOptions={{\r\n                    style: {\r\n                        fontSize: '18px'\r\n                    }\r\n                }}\r\n            />\r\n            <input type=\"checkbox\" id='friendCheckbox' />\r\n            <input type=\"radio\" className=\"tab-toggle\" name=\"tab-toggle\" id=\"tab1\" defaultChecked />\r\n            <input type=\"radio\" className=\"tab-toggle\" name=\"tab-toggle\" id=\"tab2\" />\r\n            <input type=\"radio\" className=\"tab-toggle\" name=\"tab-toggle\" id=\"tab3\" />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <div className=\"left-side\">\r\n                        <input type=\"checkbox\" id='showMyInfo' />\r\n                        <div className=\"MyInfo\">\r\n                            <div className=\"image\">\r\n                                <img src={myInfo.image} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"myDetils\">\r\n                                <p> {myInfo.userName}</p>\r\n                                <p> {myInfo.email.slice(0, 20)}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"top\">\r\n                            <label htmlFor=\"showMyInfo\">\r\n                                <div className=\"chats\">\r\n                                    <div className=\"icons\">\r\n                                        <div className=\"icon\">\r\n                                            <div className=\"menu\">\r\n                                                <div className=\"bar1\"></div>\r\n                                                <div className=\"bar2\"></div>\r\n                                                <div className=\"bar3\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"image-name\">\r\n                                    <div className=\"image\">\r\n                                        <img src={myInfo.image} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        <h3>{myInfo.userName}</h3>\r\n                                    </div>\r\n                                    <span className='chat-list'> Chats </span>\r\n                                    <span className='call-list'> Calls </span>\r\n                                    <span className='active-list'> People </span>\r\n                                </div>\r\n                            </label>\r\n                            <div className=\"icons\">\r\n                                <div className=\"iconTwo\">\r\n                                    <div onClick={() => setHide(!hide)} className=\"hamburger\">\r\n                                        <CgColorBucket />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"iconThree\">\r\n                                    <div onClick={logout} className=\"logout\">\r\n                                        <IoLogOutOutline />\r\n                                        <div className=\"logoutHover\">\r\n                                            Logout\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={hide ? 'theme_logout' : 'theme_logout show'}>\r\n                                    <div className=\"theme_logout_body\">\r\n                                        <h3>Theme</h3>\r\n                                        <div className=\"dark\">\r\n                                            <label htmlFor=\"dark\"> Dark </label>\r\n                                            <input onChange={(e) => dispatch(themeSet(e.target.value))} value='dark' type=\"radio\" name='theme' id='dark' />\r\n                                        </div>\r\n                                        <div className=\"black\">\r\n                                            <label htmlFor=\"black\"> Black </label>\r\n                                            <input onChange={(e) => dispatch(themeSet(e.target.value))} value='black' type=\"radio\" name='theme' id='black' />\r\n                                        </div>\r\n                                        <div className=\"light\">\r\n                                            <label htmlFor=\"light\"> Light </label>\r\n                                            <input onChange={(e) => dispatch(themeSet(e.target.value))} value='light' type=\"radio\" name='theme' id='light' />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"forCallTab\">\r\n                            <div className=\"tabOne\">\r\n                                <div className=\"friends\">\r\n                                    <div className=\"friend-search\">\r\n                                        <div className=\"search\">\r\n                                            <button><BiSearch /></button>\r\n                                            <input onChange={search} type=\"text\" placeholder='search' className=\"form-control\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        activeUser && activeUser.length > 0 ? <div className=\"active-friends\">\r\n                                            {\r\n                                                activeUser.map((u, i) => <ActiveFriend key={i} setCurrentFriend={setCurrentFriend} user={u} />)\r\n                                            }\r\n                                        </div> : ''}\r\n                                    {\r\n                                        friends && friends.length > 0 ? friends.map((fd, index) => <div key={index} onClick={() => setCurrentFriend(fd.fndInfo)} className={currentfriend._id === fd.fndInfo._id ? 'hover-friend active' : 'hover-friend'}>\r\n                                            <Friends activeUser={activeUser} myId={myInfo.id} friend={fd} />\r\n                                        </div>) : <div className=\"firstViewFriends\">No friend yet ... </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tabTwo\">\r\n                                {\r\n                                    <ForCall\r\n                                        currentfriend={currentfriend}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"tabThree\">\r\n                                <span className='active-text'> Active now </span>\r\n                                <div className=\"friends\">\r\n                                    {\r\n                                        activeUser && activeUser.length > 0 ? <div>\r\n                                            {\r\n                                                activeUser && activeUser.length > 0 ? <div className=\"active-friends\">\r\n                                                    {\r\n                                                        activeUser.map((u, i) => <ActiveFriend key={i} setCurrentFriend={setCurrentFriend} user={u} />)\r\n                                                    }\r\n                                                </div> : ''}\r\n                                        </div> : <div className=\"NoActiveFriend\">No active friend  ... </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"proparty\">\r\n                            <label className=\"tab-trigger-one\" htmlFor=\"tab1\"><BsFillChatFill /><p>Chats</p></label>\r\n\r\n                            <label className=\"tab-trigger-two\" htmlFor=\"tab2\"><BsFillCameraVideoFill /><p>Calls</p></label>\r\n\r\n                            <label className=\"tab-trigger\" htmlFor=\"tab3\"><BsFillPeopleFill /><p>People</p></label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                {\r\n                    currentfriend ? <RightSide\r\n                        activeUser={activeUser}\r\n                        ImageSend={ImageSend}\r\n                        currentfriend={currentfriend}\r\n                        inputHendle={inputHendle}\r\n                        newMessage={newMessage}\r\n                        sendMessage={sendMessage}\r\n                        message={message}\r\n                        scrollRef={scrollRef}\r\n                        emojiSend={emojiSend}\r\n                        typingMessage={typingMessage}\r\n                    /> : friends && friends.length > 0 ? <div className=\"firstView\">Select a chat to start messaging</div> : <div className=\"firstViewFriend\">No friend yet ... </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger","\r\nimport React from 'react'\r\nimport { Route,Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProtectRoute = (props) => {\r\n    const {authenticate} = useSelector(state=>state.auth);\r\n    return authenticate?<Route path={props.path} component={props.component} exact={props.exact} />:<Redirect to='/messenger/login' />\r\n}\r\n\r\nexport default ProtectRoute","\nimport './App.css';\nimport { BrowserRouter as Router,Route,Switch } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Messenger from './components/Messenger';\nimport ProtectRoute from './components/ProtectRoute';\nfunction App() {\n  return (\n    <Router>\n            <Switch>\n                <Route path='/messenger/login' component={Login} exact></Route>\n                <Route path='/messenger/register' component={Register} exact></Route>\n                <ProtectRoute path='/' component={Messenger} exact />\n            </Switch>\n        </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { REGISTER_FAIL,REGISTER_SUCCESS,SUCCESS_MESSAGE_CLEAR,ERROR_CLEAR,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from \"../types/authType\";\r\nimport deCodeToken from \"jwt-decode\";\r\nconst authState ={\r\n    loading : true,\r\n    authenticate : false,\r\n    error : '',\r\n    successMessage : '',\r\n    myInfo : ''\r\n}\r\n\r\nconst tokenDecode =(token) =>{\r\n    const tokenDecoded = deCodeToken(token);\r\n    const expTime = new Date(tokenDecoded.exp*1000);\r\n    if(new Date()>expTime){\r\n        return null;\r\n    }\r\n    return tokenDecoded;\r\n}\r\nconst getToken = localStorage.getItem('authToken');\r\nif(getToken){\r\n    const getInfo = tokenDecode(getToken);\r\n    if(getInfo){\r\n        authState.myInfo = getInfo;\r\n        authState.authenticate = true;\r\n        authState.loading = false\r\n    }\r\n}\r\n\r\n\r\nexport const authReducer = (state=authState, action) =>{\r\n    const {payload,type} = action;\r\n\r\n    if(type === REGISTER_FAIL || type === USER_LOGIN_FAIL){\r\n        return{\r\n            ...state,\r\n            error : payload.error,\r\n            authenticate : false,\r\n            myInfo : '',\r\n            loading : true\r\n        }\r\n    }\r\n    if(type=== REGISTER_SUCCESS || type === USER_LOGIN_SUCCESS){\r\n        const myInfo = tokenDecode(payload.token);\r\n        return{\r\n            ...state,\r\n            myInfo : myInfo,\r\n            successMessage : payload.successMessage,\r\n            error : '',\r\n            authenticate : true,\r\n            loading : false\r\n        }\r\n    }\r\n    if(type === SUCCESS_MESSAGE_CLEAR){\r\n        return{\r\n            ...state,\r\n            successMessage : '',\r\n        }\r\n    }\r\n    if(type === ERROR_CLEAR){\r\n        return{\r\n            ...state,\r\n            error : '',\r\n        }\r\n    }\r\n    if(type === 'LOGOUT_SUCCESS'){\r\n        return {\r\n            ...state,\r\n            authenticate: false,\r\n            myInfo : '',\r\n            successMessage : 'Logout successfull'\r\n        }\r\n    }\r\n    return state;\r\n}","import { FRIENDS_GET_SUCCESS,MESSAGE_GET_SUCCESS,MESSAGE_SEND_SUCCESS,UPDATE_FRIEND_MESSAGE,MESSAGE_SEND_SUCCESS_CLEAR,SEEN_MESSAGE,DELIVARED_MESSAGE,UPDATE,MESSAGE_GET_SUCCESS_CLEAR} from \"../types/messengerType\";\r\nconst messengerState = {\r\n    friends : [],\r\n    message : [],\r\n    messageSendSuccess : false,\r\n    message_get_success : false,\r\n    themeMood : '',\r\n    new_user_add : ''\r\n}\r\n\r\nexport const messengerReducer = (state=messengerState , action) =>{\r\n    const {type,payload} = action;\r\n    if(type === 'THEME_GET_SUCCESS' || type === 'THEME_SET_SUCCESS'){\r\n        return {\r\n            ...state,\r\n            themeMood : payload.theme\r\n        }\r\n    }\r\n    if(type === FRIENDS_GET_SUCCESS){\r\n        return {\r\n            ...state,\r\n            friends : payload.friends\r\n        }\r\n    }\r\n    if(type === MESSAGE_GET_SUCCESS){\r\n        return {\r\n            ...state,\r\n            message_get_success : true,\r\n            message : payload.message\r\n        }\r\n    }\r\n    if(type === MESSAGE_SEND_SUCCESS){\r\n        return {\r\n            ...state,\r\n            messageSendSuccess : true,\r\n            message : [...state.message,payload.message]\r\n        }\r\n    }\r\n    if(type === 'SOCKET_MESSAGE'){\r\n        return {\r\n            ...state,\r\n            message : [...state.message,payload.message]\r\n        }\r\n    }\r\n    if(type === UPDATE_FRIEND_MESSAGE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.msgInfo.reseverId || f.fndInfo._id === payload.msgInfo.senderId );\r\n        state.friends[index].msgInfo = payload.msgInfo;\r\n        state.friends[index].msgInfo.status = payload.status;\r\n        return state;\r\n\r\n    }\r\n    if(type === MESSAGE_SEND_SUCCESS_CLEAR){\r\n        return {\r\n            ...state,\r\n            messageSendSuccess : false\r\n        }\r\n    }\r\n    if(type === SEEN_MESSAGE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.msgInfo.reseverId || f.fndInfo._id === payload.msgInfo.senderId );\r\n        state.friends[index].msgInfo.status = 'seen';\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n    if(type === DELIVARED_MESSAGE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.msgInfo.reseverId || f.fndInfo._id === payload.msgInfo.senderId );\r\n        state.friends[index].msgInfo.status = 'delivared';\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n    if(type === UPDATE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.id);\r\n        if(state.friends[index].msgInfo){\r\n            state.friends[index].msgInfo.status = 'seen';\r\n        }\r\n        return {\r\n            ...state\r\n        }\r\n    }\r\n    if(type === MESSAGE_GET_SUCCESS_CLEAR){\r\n        return {\r\n            ...state,\r\n            message_get_success : false\r\n        }\r\n    }\r\n    if(type === 'SEEN_ALL'){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.reseverId);\r\n        state.friends[index].msgInfo.status = 'seen';\r\n        return {\r\n            ...state\r\n        }\r\n    }\r\n    if(type === 'LOGOUT_SUCCESS'){\r\n        return{\r\n            ...state,\r\n            friends : [],\r\n            message : [],\r\n            messageSendSuccess : false,\r\n            message_get_success : false,\r\n        }\r\n    }\r\n\r\n    if(type === 'NEW_USER_ADD'){\r\n        return{\r\n            ...state,\r\n            new_user_add : payload.new_user_add\r\n        }\r\n    }\r\n    if(type === 'NEW_USER_ADD_CLEAR'){\r\n        return {\r\n            ...state,\r\n            new_user_add : ''\r\n        }\r\n    }\r\n    \r\n    return state; \r\n}","import {createStore,compose,combineReducers,applyMiddleware } from \"redux\";\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { authReducer } from \"./reducers/authReducer\";\r\nimport { messengerReducer } from \"./reducers/messengerReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : authReducer,\r\n    messenger: messengerReducer\r\n})\r\n\r\nconst middleware = [thunkMiddleware];\r\n\r\nconst store = createStore(rootReducer,compose(\r\n   applyMiddleware(...middleware), //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './main.scss'\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from './store/index';\nimport { positions,transitions,Provider as AlertProvider } from \"react-alert\";\nimport  alertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  timeout : 5000,\n  positions : positions.BOTTOM_CENTER,\n  transitions : transitions.SCALE\n}\n\nReactDOM.render(\n  \n    <Provider store={store}>\n      <AlertProvider template ={alertTemplate} {...options}>\n          <App/>\n      </AlertProvider>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}